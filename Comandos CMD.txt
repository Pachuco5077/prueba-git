dir -- muestra los archivos de la carpeta
md mkdir -- para crear una carpeta
cls -- para limpiar la consola
cd -- para acceder a una carpeta
cd.. -- para ir a la carpeta anterior
move <archivo.extension> <rutaDestino> -- para mover un archivo
CTRL + C -- para terminar una ejecucion
pwd -- para saber la ruta q estamos (solo en PowerShell)
ni -- para crear archivos (solo en PowerShell)


Comandos en Git
git init -- para iniciar el git
git status -s -- para ver el estado de los archivos
git add . -- para annadir todos los archivos a la cajita
git commit -m "<nombre>" -- para etiquetar la cajita
git log --oneline -- para ver las etiquetas de las cajas
git push --  para subir el repo a github
git remote -v -- para ver la direccion donde esta puesta la web nuestra
git checkout <a75a8f3> --  para revisar el proyecto en este espacio de tiempo
git branch -m <master> <main> -- para cambiar el nombre de la rama en ese repo
git config --global init.defaultranch <main> -- para iniciar todos los repos con main
git reset <id> -- para viajar en la misma rama, si se retrocede a otro commit, no borra los demas archivos q se pusieron despues de ese commit, pero deja de hacerle seguimiento
git reflog -- para ver todos los id de todas las salvas desde que se inicio el repo
git reset --hard <id> -- para viajar en la misma rama, si se retrocede a otro commit, como es HARD si borra los demas archivos q se pusieron despues de ese commit (restaurarlo con reflog)
git pull origin main -- para retornar arreglar el error de reset con un commit al q retrocedimos y cuando lo subimos, en github aun estaba el que quitamos y por lo tanto dio error
git revert <id> -- revierte los cambios de un commit como si los eliminara, pero en realidad crea otro nuevo commit con esos ese cambio revertido


esto es una prueba de texto no necesariaa


aqui estoy poniendo cosas nuevas para test++++
